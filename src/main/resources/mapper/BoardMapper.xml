<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ksmart.ks48team01.mapper.BoardMapper">
    <resultMap id="boardCategoryMap" type="BoardCategory">
        <id property="boardCateCode" column="BOARD_CATE_CODE"/>
        <result property="boardCateName" column="BOARD_CATE_NAME"/>
    </resultMap>

    <resultMap id="boardResultMap" type="Board">
        <!-- pk == id -->
        <id property="boardCode" column="BOARD_CODE"/>
        <result property="boardCateCode" column="BOARD_CATE_CODE"/>
        <result property="boardWritingTitle" column="BOARD_WRITING_TITLE"/>
        <result property="boardWritingContents" column="BOARD_WRITING_CONTENTS"/>
        <result property="boardFileLink" column="BOARD_FILE_LINK"/>
        <result property="boardRegDate" column="BOARD_REG_DATE"/>
        <result property="boardUpdateDate" column="BOARD_UPDATE_DATE"/>
        <!--resultmap으로 갖다 쓰려면 추가하렴-->
        <result property="boardCateName" column="BOARD_CATE_NAME"/>

        <!--고급 매핑 1:1 association DTO에서 참조하는 데이터 타입 ex:) Member memberInfo-->
        <association property="userInfo" javaType="User">
            <id property="userId" column="USER_ID"></id>
            <result property="levelId" 		column="LEVEL_ID"/>
            <result property="userLevelName" 		column="USER_LEVEL_NAME"/>
            <result property="districtCode" 		column="DISTRICT_CODE"/>
            <result property="regionCode" 	column="REGION_CODE"/>
            <result property="userPw" 		column="USER_PW"/>
            <result property="userName" 		column="USER_NAME"/>
            <result property="userGender" 	column="USER_GENDER"/>
            <result property="userBirth" 	column="USER_BIRTH"/>
            <result property="residentNumber" 	column="RESIDENT_NUMBER"/>
            <result property="userAddress" 	column="USER_ADDRESS"/>
            <result property="userContact" 	column="USER_CONTACT"/>
            <result property="userEmail" 	column="USER_EMAIL"/>
            <result property="userRecentLogin" 	column="USER_RECENT_LOGIN"/>
            <result property="userRegdate" 	column="USER_REGDATE"/>
            <result property="userStat" 	column="USER_STAT"/>
            <result property="ssoType" 	column="SSO_TYPE"/>
    </association>
    </resultMap>

    <!--게시판 컨텐츠 삭제-->
    <delete id="removeBoardContents" parameterType="String">
        /*게시판 컨텐츠 삭제*/
        DELETE

        FROM
            BOARD_MAIN
        WHERE
            BOARD_CODE=#{boardCode}
    </delete>

    <!--게시판 컨텐츠 수정-->
    <update id="modifyBoardContents" parameterType="Board">
        UPDATE BOARD_MAIN
            SET
            BOARD_CATE_CODE=#{boardCateCode},
            USER_ID=#{userId},
            BOARD_WRITING_TITLE=#{boardWritingTitle},
            BOARD_WRITING_CONTENTS=#{boardWritingContents},
            BOARD_FILE_LINK=#{boardFileLink},
            BOARD_UPDATE_DATE=CURDATE()
        WHERE
            BOARD_CODE=#{boardCode};
    </update>

    <!--특정 게시글 조회-->
    <select id="getBoardInfoById" parameterType="String" resultMap="boardResultMap">
        /* 특정게시글 조회*/
        SELECT
            b.BOARD_CODE,
            b.BOARD_CATE_CODE,
            b.USER_ID,
            b.BOARD_WRITING_TITLE,
            b.BOARD_WRITING_CONTENTS,
            b.BOARD_FILE_LINK,
            b.BOARD_REG_DATE,
            b.BOARD_UPDATE_DATE
        FROM
            BOARD_MAIN AS b
            INNER JOIN
            USER_INFO AS u
            on
            u.USER_ID = b.USER_ID
        WHERE
            b.BOARD_CODE=#{boardCode};
    </select>

    <!--게시글 등록-->
    <insert id="boardContentRegist" parameterType="Board">
            <selectKey keyProperty="boardCode" resultType="String" order="BEFORE">
                /*게시판 코드 자동증가*/
                SELECT
                    (CASE
                    WHEN COUNT(b.BOARD_CODE) = 0 THEN 'BOARD001'
                    WHEN (max(cast(SUBSTRING_INDEX(b.BOARD_CODE, 'BOARD', -1) AS UNSIGNED))+1) > 999
                    THEN CONCAT('BOARD', MAX(CAST(SUBSTRING_INDEX(b.BOARD_CODE, 'BOARD', -1) AS UNSIGNED))+1)
                    ELSE CONCAT('BOARD', LPAD(max(cast(SUBSTRING_INDEX(b.BOARD_CODE, 'BOARD', -1) AS UNSIGNED))+1,3,'0'))
                    END) AS boardCode
                FROM
                    BOARD_MAIN AS b
            </selectKey>
                INSERT INTO BOARD_MAIN
                    (BOARD_CODE,
                    BOARD_CATE_CODE,
                    USER_ID,
                    BOARD_WRITING_TITLE,
                    BOARD_WRITING_CONTENTS,
                    BOARD_FILE_LINK,
                    BOARD_REG_DATE,
                    BOARD_UPDATE_DATE)
                VALUES
                    (#{boardCode},
                    #{boardCateCode},
                    #{userId},
                    #{boardWritingTitle},
                    #{boardWritingContents},
                    #{boardFileLink},
                    CURDATE(),
                    CURDATE());
    </insert>

    <!--게시판 카테고리 조회-->
    <select id="getBoardCategoryList" resultMap="boardCategoryMap">
        SELECT
        bc.BOARD_CATE_CODE,
        bc.BOARD_CATE_NAME
        FROM
        BOARD_CATEGORY AS bc
    </select>

    <!--게시판 목록 검색-->
    <select id="getBoardListBySearch" parameterType="String" resultMap="boardResultMap">
        <!--userID와 게시글 작성자 일치한 게시글 조회-->
        SELECT
            b.BOARD_CODE,
            c.BOARD_CATE_CODE,
            c.BOARD_CATE_NAME,
            u.USER_ID,
            b.BOARD_WRITING_TITLE,
            b.BOARD_WRITING_CONTENTS,
            b.BOARD_FILE_LINK,
            b.BOARD_REG_DATE,
            b.BOARD_UPDATE_DATE
        FROM
            BOARD_MAIN AS b
            INNER JOIN
            USER_INFO AS u
            on
            u.USER_ID = b.USER_ID

            INNER JOIN
            BOARD_CATEGORY AS c
            on
            c.BOARD_CATE_CODE = b.BOARD_CATE_CODE
        <where>
            <if test="searchKey != null and searchKey != ''">
                ${searchKey} LIKE CONCAT ('%', #{searchValue}, '%')
            </if>
        </where>
    </select>

    <!--게시판 목록 조회-->
    <select id="getBoardList" resultMap="boardResultMap">
        <!--userID와 게시글 작성자 일치한 게시글 조회-->
        SELECT
            b.BOARD_CODE,
            b.BOARD_CATE_CODE,
            c.BOARD_CATE_NAME,
            u.USER_ID,
            b.BOARD_WRITING_TITLE,
            b.BOARD_WRITING_CONTENTS,
            b.BOARD_FILE_LINK,
            b.BOARD_REG_DATE,
            b.BOARD_UPDATE_DATE
        FROM
            BOARD_MAIN AS b
            INNER JOIN
            USER_INFO AS u
            on
            u.USER_ID = b.USER_ID

            INNER JOIN
            BOARD_CATEGORY AS c
            on
            b.BOARD_CATE_CODE = c.BOARD_CATE_CODE
        order by
            b.BOARD_CODE;
    </select>

</mapper>