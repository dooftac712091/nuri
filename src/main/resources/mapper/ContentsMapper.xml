<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.ks48team01.mapper.ContentsMapper">

    <select id="getContentsInfoList" resultType="map" parameterType="int">
        /* 컨텐츠 정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            IFNULL(CONCAT(c.CONTENTS_SELL_START_DATE, '~', c.CONTENTS_END_DATE), 0) AS contentsSellDuration,
            IF(si.STORE_CATEGORY_NAME = '도서', 'book',
                IF(si.STORE_CATEGORY_NAME = '체육', 'exercise',
                    IF(c.CONTENTS_PG=0, '전체 관람가', CONCAT(c.CONTENTS_PG, '세 이상 관람가')))) AS contentsPg,
            CONCAT(FORMAT(c.CONTENTS_PRICE, 0), '원') AS contentsPrice,

            si.STORE_NAME AS storeName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentsRemaining
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            si.STORE_ID=c.STORE_ID
        ORDER BY c.CONTENTS_REG_DATE
        <if test="startContentsNum > -1">
            LIMIT #{startContentsNum}, #{contentsPerPage};
        </if>
    </select>

    <select id="getContentsInfoListByTabValue" resultType="map" parameterType="String">
        /* 탭 컨텐츠 정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            IFNULL(CONCAT(c.CONTENTS_SELL_START_DATE, '~', c.CONTENTS_END_DATE), 0) AS contentsSellDuration,
            IF(si.STORE_CATEGORY_NAME = '도서', 'book',
            IF(si.STORE_CATEGORY_NAME = '체육', 'exercise',
            IF(c.CONTENTS_PG=0, '전체 관람가', CONCAT(c.CONTENTS_PG, '세 이상 관람가')))) AS contentsPg,
            CONCAT(FORMAT(c.CONTENTS_PRICE, 0), '원') AS contentsPrice,

            si.STORE_NAME AS storeName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentRemaining
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            si.STORE_ID=c.STORE_ID
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__')
            </if>
        </where>
        ORDER BY c.CONTENTS_REG_DATE
        <if test="startContentsNum > -1">
            LIMIT #{startContentsNum}, #{contentsPerPage};
        </if>
    </select>

    <select id="getContentsInfoListByTabValueAndSearch" resultType="map" parameterType="String">
        /* 탭과 검색 컨텐츠 정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            IFNULL(CONCAT(c.CONTENTS_SELL_START_DATE, '~', c.CONTENTS_END_DATE), 0) AS contentsSellDuration,
            IF(si.STORE_CATEGORY_NAME = '도서', 'book',
            IF(si.STORE_CATEGORY_NAME = '체육', 'exercise',
            IF(c.CONTENTS_PG=0, '전체 관람가', CONCAT(c.CONTENTS_PG, '세 이상 관람가')))) AS contentsPg,
            CONCAT(FORMAT(c.CONTENTS_PRICE, 0), '원') AS contentsPrice,

            si.STORE_NAME AS storeName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentRemaining
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            si.STORE_ID=c.STORE_ID
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__')
            </if>
            <if test="performanceGenre != 'allGenre'">
                AND c.CONTENTS_CAT_CODE = #{performanceGenre}
            </if>
        </where>
        ORDER BY c.CONTENTS_REG_DATE
        <if test="startContentsNum > -1">
            LIMIT #{startContentsNum}, #{contentsPerPage};
        </if>
    </select>

    <select id="getContentsByTabCnt" resultType="int" parameterType="String">
        /* 각 탭의 컨텐츠 개수 */
        SELECT
        COUNT(1)
        FROM
        CONTENTS AS c
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__');
            </if>
        </where>
    </select>

    <select id="getContentsByTabAndSearchCnt" resultType="int" parameterType="String">
        /* 각 탭의 서칭 결과 컨텐츠 개수 */
        SELECT
        COUNT(1)
        FROM
        CONTENTS AS c
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__');
            </if>
            <if test="performanceGenre != 'allGenre'">
                AND c.CONTENTS_CAT_CODE = #{performanceGenre}
            </if>
        </where>
    </select>

    <select id="getStoreCategory" resultType="StoreCategory">
        SELECT
            sc.STORE_CATEGORY_NAME AS storeCategoryName,
            sc.STORE_CATEGORY_CODE AS storeCategoryCode
        FROM
            STORE_CATEGORY AS sc;
    </select>

    <select id="getContentsCategory" resultType="ContentsCategory">
        SELECT
            cc.CONTENTS_CAT_NAME AS contentsCategoryName,
            cc.CONTENTS_CAT_CODE AS contentsCategoryCode,
            cc.STORE_CATEGORY_CODE AS storeCategoryCode
        FROM
            CONTENT_CATEGORY AS cc
        WHERE
            cc.STORE_CATEGORY_CODE='A01' AND
            NOT cc.CONTENTS_CAT_NAME='공연';
    </select>

    <insert id="addBookContents" parameterType="Contents">

        <selectKey keyProperty="contentsId" order="BEFORE" resultType="String">
            /* 컨텐츠아이디 자동증가 */
            SELECT
                (CASE
                WHEN c.CONTENTS_ID = CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d'), '0001')
                THEN CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d'), '0001')
                WHEN (MAX(CAST(SUBSTRING(CONTENTS_ID, 12) AS UNSIGNED))+1) > 999
                THEN CONCAT(CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d')), MAX(CAST(SUBSTRING(CONTENTS_ID, 12) AS UNSIGNED))+1)
                ELSE
                CONCAT(CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d')), LPAD(MAX(CAST(SUBSTRING(CONTENTS_ID, 12) AS UNSIGNED))+1, 4, '0'))
                END) AS contentsId
            FROM
                CONTENTS AS c
        </selectKey>
        INSERT INTO CONTENTS(CONTENTS_ID, CONTENTS_CAT_CODE, REGION_CODE, STORE_ID, CONTENTS_CAT_NAME, CONTENTS_NAME, CONTENT_ADDRESS,
        CONTENTS_DURATION, CONTENTS_PG, CONTENTS_PRICE, CONTENTS_START_DATE, CONTENTS_END_DATE, CONTENTS_REG_DATE, CONTENTS_SELL_START_DATE,
        CONTENTS_SELL_END_DATE, AMOUNT_CONTENT_REGISTERED, AMOUNT_CONTENT_REMAINING)

        VALUES(#{contentsId}, #{contentsCategoryCode}, #{regionCode}, #{userId}, #{contentsCategoryName},
        #{contentsName}, #{contentsAddress}, #{contentsDuration}, #{contentsSellDuration}, #{contentsPg}, #{contentsPrice},
        #{contentsStartDate}, #{contentsEndDate}, CURDATE(), #{contentsSellStartDate}, #{contentsSellEndDate},
        #{amountContentRegistered}, #{amountContentRemaining})
    </insert>
    
    <select id="getContentsDetailInfo" resultType="map" parameterType="String">
        SELECT
            c.CONTENTS_NAME AS contentsName,
            IFNULL(CONCAT(c.CONTENTS_START_DATE, ' ~ ', c.CONTENTS_END_DATE), 0) AS contentsDurationDate,
            IFNULL(CONCAT(c.CONTENTS_SELL_START_DATE, '~', c.CONTENTS_END_DATE), 0) AS contentsSellDuration,
            c.CONTENT_ADDRESS AS contentsAddress,
            c.CONTENTS_DURATION AS contentsDuration,
            c.CONTENTS_PG AS contentsPg,
            c.CONTENTS_PRICE AS contentsPrice,
            si.STORE_CONTACT AS storeContact,
            c.CONTENTS_DETAIL AS contentsDetail
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO si
            ON
            c.STORE_ID = si.STORE_ID
        WHERE
        c.CONTENTS_ID = #{contentsId};
    </select>

</mapper>