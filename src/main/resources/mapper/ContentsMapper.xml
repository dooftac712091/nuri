<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.ks48team01.mapper.ContentsMapper">

    <select id="getContentsInfoList" resultType="map" parameterType="int">
        /* 컨텐츠 정보 */
        SELECT
            c.CONTENTS_NAME AS contentsName,
            IFNULL(CONCAT(c.CONTENTS_SELL_START_DATE, '~', c.CONTENTS_END_DATE), 0) AS contentsSellDuration,
            IF(si.STORE_CATEGORY_NAME = '도서', 'book',
                IF(si.STORE_CATEGORY_NAME = '체육', 'exercise',
                    IF(c.CONTENTS_PG=0, '전체 관람가', CONCAT(c.CONTENTS_PG, '세 이상 관람가')))) AS contentsPg,
            CONCAT(FORMAT(c.CONTENTS_PRICE, 0), '원') AS contentsPrice,

            si.STORE_NAME AS storeName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentsRemaining
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            si.STORE_ID=c.STORE_ID
        ORDER BY c.CONTENTS_REG_DATE
        <if test="startContentsNum > -1">
            LIMIT #{startContentsNum}, #{contentsPerPage};
        </if>
    </select>
    <select id="getContentsCnt" resultType="int">
        /* 컨텐츠 전체 행의 개수 */
        SELECT
            COUNT(1)
        FROM
            CONTENTS;
    </select>

    <select id="getStoreCategory" resultType="StoreCategory">
        SELECT
            sc.STORE_CATEGORY_NAME AS storeCategoryName
        FROM
            STORE_CATEGORY AS sc;
    </select>

    <select id="getContentsCategory" resultType="ContentsCategory">
        SELECT
            cc.CONTENTS_CAT_NAME AS contentsCategoryName
        FROM
            CONTENT_CATEGORY AS cc
        WHERE
            cc.STORE_CATEGORY_CODE='A01' AND
            NOT cc.CONTENTS_CAT_NAME='공연';
    </select>

    <select id="getContentsCategoryBySearch" parameterType="String">
        /* 검색 조건에 따른 회원목록 조회 */
        SELECT
            m.m_id,
            m.m_pw,
            m.m_name,
            IFNULL(m.m_level, 0) AS m_level,
            l.level_name AS m_level_name,
            m.m_email,
            m.m_addr,
            m.m_reg_date
        FROM
            tb_member AS m
            INNER JOIN
            tb_member_level AS l
            ON
            m.m_level = l.level_num
            <!--  WHERE
                m.m_id = #{memberId}; 오류 -->
        <where>
            <if test="searchKey != null and searchKey != ''">
                <!-- $랑 # 구분하기 -->
                ${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
                /* concat 쓴 이유?? */
            </if>
        </where>
    </select>
</mapper>